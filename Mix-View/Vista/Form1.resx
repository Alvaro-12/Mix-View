<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAbElEQVRIS7XNKw6AMBAG4RoelyckBIHgOL3XsrIlo5qp+MSO+LdExFQYTRhNGE0YTRhNGE0YTRhN
        GE0YTd1Ra93Tnd5BV1rbzf+DLZ3pGXSkpd3sHsyA0YTRhNGE0YTRhNGE0YTRhNGE0RPlA4Zts+sSyAO5
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4Cm//fZfNMTQwZHRYYoAAAAASUVORK5CYII=
</value>
  </data>
</root>