<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAbElEQVRIS7XNKw6AMBAG4RoelyckBIHgOL3XsrIlo5qp+MSO+LdExFQYTRhNGE0YTRhNGE0YTRhN
        GE0YTd1Ra93Tnd5BV1rbzf+DLZ3pGXSkpd3sHsyA0YTRhNGE0YTRhNGE0YTRhNGE0RPlA4Zts+sSyAO5
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        igAAAABJRU5ErkJggg==
</value>
  </data>
</root>